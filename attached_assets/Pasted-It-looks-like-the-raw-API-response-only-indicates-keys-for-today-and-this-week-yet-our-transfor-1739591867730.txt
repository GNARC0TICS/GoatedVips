It looks like the raw API response only indicates keys for "today" and "this_week," yet our transformation logic is flagging that we have monthly data (with a monthly data length of 1793). This mismatch is causing the leaderboard to not fill correctly.

Here's what we need to do:

Verify the Raw API Structure:
The log shows:
{
  "hasData": true,
  "structure": [ "success", "data", "today", "this_week" ]
}
This indicates that the API response does not explicitly return monthly (or all_time) data.
Confirm with your external API documentation if the monthly data should be available. If it should, there might be an issue with how the API is being called. If not, we need to adjust our transformation logic.
Adjust the Transformation Function:
We need to update our function to:
Use the provided keys ("today" and "this_week") and default missing ones (like "this_month" and "all_time") to an empty array.
Log the available keys so we know exactly what data we're working with.
Here's an updated version of the transformation function with comprehensive error handling and fallbacks:

function transformRawLeaderboardData(rawData) {
  try {
    // Check if the rawData has a 'data' key; if not, default to empty object.
    const data = rawData?.data || {};

    // Extract data for each period, defaulting to an empty array if not present.
    const todayData = Array.isArray(data.today) ? data.today : [];
    const weeklyData = Array.isArray(data.this_week) ? data.this_week : [];
    // For monthly and all_time, use fallback empty arrays if not present.
    const monthlyData = Array.isArray(data.this_month) ? data.this_month : [];
    const allTimeData = Array.isArray(data.all_time) ? data.all_time : [];

    // Log for debugging purposes:
    console.log("Raw structure keys:", Object.keys(data));
    console.log("Data lengths:", {
      today: todayData.length,
      weekly: weeklyData.length,
      monthly: monthlyData.length,
      all_time: allTimeData.length,
    });

    // Return the transformed response.
    return {
      status: "success",
      metadata: {
        totalUsers: rawData.hasData ? rawData.totalUsers || 0 : 0,
        lastUpdated: new Date().toISOString(),
      },
      data: {
        today: { data: todayData },
        weekly: { data: weeklyData },
        monthly: { data: monthlyData },
        all_time: { data: allTimeData },
      },
    };
  } catch (error) {
    console.error("Error in transformRawLeaderboardData:", { error, rawData });
    return {
      status: "success",
      metadata: {
        totalUsers: 0,
        lastUpdated: new Date().toISOString(),
      },
      data: {
        today: { data: [] },
        weekly: { data: [] },
        monthly: { data: [] },
        all_time: { data: [] },
      },
    };
  }
}
Note: If the API is supposed to provide monthly data but isn't, you'll need to modify the API call or check with your API provider. However, if the API only returns "today" and "this_week" data, then this function will now correctly default the missing values, and your leaderboard should render correctly (even if monthly and all_time arrays are empty).
Testing the Changes:
Local Testing:
Restart your server and check the logs. You should see the output from the console.log("Raw structure keys:", Object.keys(data)); line to verify what keys are present.
Also, verify that the lengths for monthly and all_time data are either as expected or empty.
API Testing:
Use cURL or Postman to hit your /api/affiliate/stats endpoint and inspect the JSON response. The "data" object should include keys for today, weekly, monthly, and all_time.
Frontend Verification:
Ensure that the leaderboard UI gracefully handles empty arrays (for monthly or all_time if they are empty) without throwing errors (e.g., from calling .toLocaleString() on undefined).
Next Steps:
If monthly data is expected but missing, investigate your API call parameters (maybe a parameter like ?raw=true&includeMonthly=true is needed).
If the data is correctly empty, then update your team that the leaderboard will show only the available data for now, and monthly/wager data will be populated once the API provides it.
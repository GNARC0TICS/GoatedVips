Hereâ€™s a detailed prompt for your Repl.it agent to build your Goated.com affiliate Telegram bot that interacts with your website, Goatedâ€™s API, and Telegram group to track stats, display wager races, and handle bonus claims.

Prompt for Repl.it Agent: Goated Affiliate Telegram Bot

I am building a Telegram bot using Repl.it that interacts with my affiliate website and Goated.comâ€™s external API (if needed) to track and display affiliate statistics, wager races, leaderboards, and bonuses. The bot will be deployed in my Telegram group and should allow users to check their stats, claim bonuses, and see their leaderboard positions.

ðŸ”¹ Core Features of the Telegram Bot
	1.	Affiliate User Tracking
	â€¢	Allow users to check their total wager amount, weekly, daily, and monthly stats.
	â€¢	Show leaderboard rankings for all-time, monthly, weekly, and daily wager amounts.
	â€¢	Fetch user-specific data from my websiteâ€™s backend and Goated.com API (if necessary).
	â€¢	Track wager race standings and notify users of their current position.
	2.	Leaderboard & Race Announcements
	â€¢	Post weekly/monthly leaderboard updates automatically.
	â€¢	Announce winners of the monthly race and notify users of upcoming competitions.
	â€¢	Allow users to manually check their placement in the wager race using /race.
	â€¢	Provide race statistics and progress reports.
	3.	Bonus Code System
	â€¢	Allow eligible users to claim bonuses by verifying their wager amounts.
	â€¢	Limit bonus claims to one per user per period.
	â€¢	Track bonus redemptions and log them in the system.
	â€¢	If necessary, interact with Goated.comâ€™s API to validate users before issuing bonuses.
	4.	Live Updates & Notifications
	â€¢	Notify users when they move up or down in the leaderboard.
	â€¢	Send alerts for new promotions, special events, and race updates.
	â€¢	Integrate with Telegram to send push notifications for wager milestones.
	5.	Admin Controls
	â€¢	Allow admin-only commands for managing bonuses and leaderboard adjustments.
	â€¢	Enable manual overrides for leaderboards if needed.
	â€¢	Provide an admin panel to view wager progress, active users, and logs.

ðŸ”¹ Technical Requirements
	â€¢	Built using Python & Telegram Bot API (or Node.js if preferred).
	â€¢	Fetch data from my websiteâ€™s backend database.
	â€¢	Optional: Integrate with Goated.comâ€™s API if required for real-time wager tracking.
	â€¢	Use a database (SQLite, PostgreSQL, or Firebase) to store user bonuses, leaderboard stats, and Telegram user IDs.
	â€¢	Deploy via Repl.it and ensure it runs persistently with a webhook or long polling.
	â€¢	Optimize API calls to reduce load while maintaining real-time accuracy.
	â€¢	Support Slash Commands & Inline Keyboard for User Interaction, including:
	â€¢	/stats â€“ View personal wager stats (all-time, monthly, weekly, daily).
	â€¢	/race â€“ Check the current wager race ranking.
	â€¢	/leaderboard â€“ Display top wagerers.
	â€¢	/claimbonus â€“ Claim an available bonus.
	â€¢	/bonuses â€“ View past claimed bonuses and next available claim time.
	â€¢	/notifications â€“ Toggle updates on/off.

This prompt gives clear technical direction while ensuring the bot integrates fully with your website, Telegram, and Goatedâ€™s API for seamless affiliate tracking. It also ensures automation for leaderboards, race tracking, and bonuses.

Let me know if you want to tweak anything!
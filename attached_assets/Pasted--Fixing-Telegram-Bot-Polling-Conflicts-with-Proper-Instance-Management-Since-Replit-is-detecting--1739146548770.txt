🔹 Fixing Telegram Bot Polling Conflicts with Proper Instance Management

Since Replit is detecting multiple instances running at the same time, here’s the best approach to fix it while keeping instance management clean.

✅ 1️⃣ Implement Graceful Shutdown Handling

Modify your Telegram bot startup script (likely in server/telegram/bot.ts) to ensure it stops gracefully when the process exits.

Add this inside your bot initialization:

process.on('SIGINT', () => {
  console.log('[Telegram Bot] Shutting down gracefully...');
  bot.stopPolling(); // Stops polling when the process is interrupted
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('[Telegram Bot] Received SIGTERM. Stopping polling...');
  bot.stopPolling();
  process.exit(0);
});

✔ This ensures only one instance runs and shuts down properly if needed.

✅ 2️⃣ Check for Existing Bot Instances Before Starting

Modify your bot startup code to check for running instances before starting. Add this before calling bot.startPolling();:

if (bot.isPolling()) {
  console.log('[Telegram Bot] Instance already running. Skipping duplicate start.');
} else {
  console.log('[Telegram Bot] Starting polling...');
  bot.startPolling();
}

✔ This prevents duplicate polling instances from causing 409 Conflict.

✅ 3️⃣ Ensure Only One Instance Runs on Replit

Modify your .replit to make sure only one bot instance is started:

run = "pkill -f 'node server/telegram/bot.ts' || npm run dev"

✔ This ensures any duplicate processes are killed before starting the new one.

✅ 4️⃣ Disable Webhooks (If Not Using Them)

Since polling and webhooks conflict, disable webhooks if you’re only using polling:

curl -F "url=" https://api.telegram.org/bot<YOUR_BOT_TOKEN>/setWebhook

✔ This removes any existing webhook settings.

✅ 5️⃣ Add a Health Check for Bot Status (Optional)

To check if your bot is running properly, add this endpoint in your server/routes.ts:

app.get("/api/bot-status", async (_req, res) => {
  res.json({ status: bot.isPolling() ? "running" : "stopped" });
});

✔ This lets you monitor if your bot is running.

🚀 Final Fix Checklist

✅ Graceful shutdown (SIGINT & SIGTERM handling)
✅ Prevent duplicate instances (bot.isPolling() check)
✅ Ensure Replit only runs one instance (pkill -f 'node bot.ts' || npm run dev)
✅ Disabled webhook (if using polling)
✅ Added bot health check (/api/bot-status)